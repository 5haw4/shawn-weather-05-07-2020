{"version":3,"sources":["components/Flexbox.js","components/Link.js","components/LinkButton.js","utils/consts.js","utils/cookies.js","components/Navbar.js","store/actions/toasterActions.js","store/actions/settingsActions.js","components/Footer.js","components/Toaster.js","components/Temp.js","components/Callout.js","components/AutoComplete.js","store/actions/searchActions.js","store/actions/favoriteActions.js","pages/Home.js","utils/utils.js","components/WeatherCard.js","pages/Favorites.js","pages/PageNotFound.js","App.js","serviceWorker.js","store/reducers/searchReducer.js","store/reducers/favoriteReducer.js","store/reducers/toasterReducer.js","store/reducers/settingsReducer.js","store/reducers/rootReducer.js","index.js"],"names":["Flexbox","props","leftItems","centerItems","rightItems","leftStyle","centerStyle","rightStyle","className","style","map","item","i","key","MyLink","showIcon","useNavLink","isReactRouterLink","href","startsWith","DynamicLink","NavLink","Link","to","exact","target","rel","margin","children","icon","color","LinkButton","btnStyle","iconStyle","btnProps","rightIcon","minimal","intent","API_BASE_URL","getApiKey","getCookie","USER_WEATHER_API_KEY_CID","generateFiveDaysForcastUrl","locKey","DEFAULT_LOCATION","KEY","CITY","COUNTRY","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","name","ca","decodeURIComponent","split","length","c","charAt","substring","indexOf","Navbar","dispatch","useDispatch","useState","isApiKeyAlertOpened","setIsApiKeyAlertOpened","userApiKeyInput","setUserApiKeyInput","useSelector","state","settingsReducer","isTempCels","isDarkMode","alertApiKey","isOpen","canEscapeKeyCancel","canOutsideClickCancel","confirmButtonText","cancelButtonText","onClose","onCancel","onConfirm","toast","type","addToast","message","label","helperText","value","onChange","e","id","padding","textDecoration","iconSize","content","onClick","getState","body","classList","toggle","text","Footer","height","getFullYear","ToasterFunc","toasts","toasterReducer","ref","setRef","useEffect","forEach","show","toUpperCase","maxToasts","Temp","temp","finalTemp","Number","toFixed","tempUnit","isNaN","MyCallout","wrapperStyle","calloutStyle","title","width","maxWidth","AutoComplete","inputRef","useRef","items","itemRenderer","noResults","inputProps","isOpened","setIsOpened","large","onFocus","onBlur","setTimeout","position","zIndex","marginTop","updateSelectedLocation","data","city","country","loadAutoComplete","query","searchQuery","searchReducer","fetch","headers","then","r","json","res","Key","LocalizedName","Country","filter","toLowerCase","includes","catch","err","getGeolocationData","latitude","longitude","lat","lon","loadFavoriteWeatherInfo","favoriteReducer","favorites","favoriteWeatherData","kew","credentials","Temperature","Imperial","Value","WeatherText","connect","updateSearchQuery","test","getLocationData","locationsData","curLocData","isLoading","overview","fiveDaysForcast","locationKey","axios","create","baseURL","get","console","log","minTemp","DailyForecasts","Minimum","maxTemp","Maximum","avgTemp","overviewText","Headline","Text","link","iconId","Day","Icon","date","EpochDate","location","toggleFavoriteLocation","find","el","push","JSON","stringify","getUserGeolocation","error","navigator","geolocation","timeout","getCurrentPosition","coords","autoComplete","selectedLocation","isLoadingAutoComplete","errorMessage","isFavorite","isGeoLocationSelected","Object","keys","autoComplSearchTimeout","setAutoComplSearchTimeout","clearTimeout","searchBox","display","flexFlow","alignItems","justifyContent","placeholder","disabled","errorCallout","searchResult","elevation","minHeight","interactive","flex","textAlign","src","alt","maxHeight","getDay","WeatherCard","degree","Favorites","history","useHistory","PageNotFound","App","disptach","parse","basename","path","component","Home","Boolean","window","hostname","match","initialState","Reducer","action","slice","rootReducer","combineReducers","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","store","Store","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf72f49d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport '../styles/components/flexbox.scss'\r\n\r\nexport default function Flexbox(props) {\r\n    const { leftItems, centerItems, rightItems,\r\n    leftStyle, centerStyle, rightStyle } = props\r\n    return (\r\n        <div className=\"flexbox\" style={props.style}>\r\n            {leftItems && <div className=\"flexbox\" style={leftStyle}>\r\n                {leftItems.map((item,i) => <div key={i}>{item}</div>)}\r\n            </div>}\r\n            {centerItems && <div className=\"flexbox\" style={centerStyle}>\r\n                {centerItems.map((item,i) => <div key={i}>{item}</div>)}\r\n            </div>}\r\n            {rightItems && <div className=\"flexbox\" style={rightStyle}>\r\n                {rightItems.map((item,i) => <div key={i}>{item}</div>)}\r\n            </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { Icon } from '@blueprintjs/core'\r\n\r\nexport default function MyLink(props) {\r\n    const { showIcon = true, useNavLink } = props\r\n    const isReactRouterLink = props.href.startsWith('/');\r\n    const DynamicLink = isReactRouterLink ? (useNavLink ? NavLink : Link) : 'a';\r\n    props = isReactRouterLink ? \r\n        {...props, to: props.href, ...(useNavLink ? {exact: true} : {})} : \r\n        {target: \"_blank\", rel: \"noopener noreferrer\", ...props}\r\n    delete props.showIcon\r\n    delete props.useNavLink\r\n    return (\r\n        <DynamicLink {...props} style={{margin: \"auto 5px\", ...props.style}} >\r\n            {props.children}\r\n            {!isReactRouterLink && showIcon && \r\n                <Icon icon=\"arrow-top-right\" style={{color: \"white\"}} />\r\n            }\r\n        </DynamicLink>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport Link from './Link'\r\n\r\nimport { Button, Icon } from '@blueprintjs/core'\r\n\r\nexport default function LinkButton(props) {\r\n    const { href, icon, children, useNavLink, btnStyle = {}, iconStyle = {}, btnProps = {} } = props\r\n    const rightIcon = !href.startsWith(\"/\") && \"arrow-top-right\";\r\n    return (\r\n        <Link useNavLink={useNavLink} href={href} showIcon={false}>\r\n            <Button minimal style={{color: \"white\", ...btnStyle}}\r\n                icon={icon && <Icon icon={icon} style={{color: \"white\", ...iconStyle}} intent=\"primary\" />}\r\n                rightIcon={rightIcon && <Icon icon={rightIcon} style={{color: \"white\", ...iconStyle}} intent=\"primary\" />}\r\n                {...btnProps}\r\n            >{children}</Button>\r\n        </Link>\r\n    )\r\n}\r\n","import { getCookie } from \"./cookies\"\r\n\r\n//AccuWeather API\r\nexport const API_BASE_URL = \"https://dataservice.accuweather.com/\"\r\nconst API_KEY = \"YGqnk3lBPGGPr4JN5DRxyG9zkCGGLAOz\"\r\nconst getApiKey = () => {\r\n    return getCookie(USER_WEATHER_API_KEY_CID) || API_KEY\r\n}\r\n//generating URL for each of the API endpoints\r\nexport const generateAutoCompleteUrl = (query) => {\r\n    return `${API_BASE_URL}locations/v1/cities/autocomplete?apikey=${getApiKey()}&q=${query}`\r\n}\r\nexport const generateCurConditionByLocKeyUrl = (locKey) => {\r\n    return `${API_BASE_URL}currentconditions/v1/${locKey}?apikey=${getApiKey()}`\r\n}\r\nexport const generateFiveDaysForcastUrl = (locKey) => {\r\n    return `${API_BASE_URL}forecasts/v1/daily/5day/${locKey}?apikey=${getApiKey()}`\r\n}\r\nexport const generateCurConditionByGeoUrl = (lat, lon) => {\r\n    return `${API_BASE_URL}locations/v1/cities/geoposition/search?apikey=${getApiKey()}&q=${lat},${lon}`\r\n}\r\n\r\n//default location when can't use geo-location\r\nexport const DEFAULT_LOCATION=  {\r\n    KEY: \"215854\",\r\n    CITY: \"Tel Aviv\",\r\n    COUNTRY: \"Israel\"\r\n}\r\n\r\n//cookies\r\nexport const COOKIES_EXIRES_IN_DAYS = 365\r\nexport const IS_DARK_MODE_CID = \"is-dark-mode\";\r\nexport const FAVORITES_CID = \"favorites\";\r\nexport const IS_TEMP_CELS_CID = \"is-temp-fahr\";\r\nexport const USER_WEATHER_API_KEY_CID = \"user-accu-weather-api-key\";","import { COOKIES_EXIRES_IN_DAYS } from './consts'\r\n\r\nexport const setCookie = (cname, cvalue, exdays = COOKIES_EXIRES_IN_DAYS) => {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays*24*60*60*1000));\r\n    var expires = \"expires=\"+ d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\n\r\nexport const getCookie = (cname) => {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for(var i = 0; i <ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n","import React,{ useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Button, Icon, Tooltip, Alert, InputGroup, FormGroup } from '@blueprintjs/core'\r\n\r\nimport Flexbox from './Flexbox'\r\nimport Link from './Link'\r\nimport LinkButton from './LinkButton'\r\n\r\nimport { setCookie } from '../utils/cookies'\r\nimport { USER_WEATHER_API_KEY_CID } from '../utils/consts'\r\n\r\nimport { toggleDarkMode, toggleTempUnit } from '../store/actions/settingsActions'\r\nimport { addToast } from '../store/actions/toasterActions'\r\n\r\nexport default function Navbar() {\r\n    const dispatch = useDispatch()\r\n    const [isApiKeyAlertOpened, setIsApiKeyAlertOpened] = useState(false)\r\n    const [userApiKeyInput, setUserApiKeyInput] = useState(\"\")\r\n    const { isTempCels, isDarkMode } = useSelector(state => state.settingsReducer)\r\n\r\n    const updateUserApiKey = () => {\r\n        //clearing the input in the alert\r\n        setUserApiKeyInput(\"\")\r\n        //updating the cookie\r\n        setCookie(USER_WEATHER_API_KEY_CID, userApiKeyInput)\r\n        //showing success toast\r\n        dispatch(addToast({ intent: \"SUCCESS\", icon: \"tick\", message: \r\n            `API key ${userApiKeyInput ? \"updated\" : \"removed\"} successfully` }))\r\n    }\r\n\r\n    //alert for the user API key input\r\n    const alertApiKey = <Alert isOpen={isApiKeyAlertOpened} canEscapeKeyCancel canOutsideClickCancel\r\n        intent=\"success\" confirmButtonText=\"Update API Key\" cancelButtonText=\"Cancel\"\r\n        onClose={() => setIsApiKeyAlertOpened(false)}\r\n        onCancel={() => setUserApiKeyInput(\"\")}\r\n        onConfirm={() => updateUserApiKey()}>\r\n        <FormGroup label=\"Set Your AccurWeather API Key\" helperText={`The API key needs to be an AccuWeather \r\n            API key, it will be saved on your browser as a cookie.`}>\r\n            <InputGroup value={userApiKeyInput} onChange={e => setUserApiKeyInput(e.target.value)} />\r\n        </FormGroup>\r\n    </Alert>\r\n\r\n    return (\r\n        <div id=\"navbar\">\r\n            <Flexbox\r\n                style={{padding: 0,}}\r\n                leftItems={[\r\n                    <Link href=\"/\" style={{margin: 0, textDecoration: \"none\"}}>\r\n                        <h1 style={{margin: 0, color: \"white\"}}>\r\n                            <Icon icon=\"cloud\" iconSize=\"36\" /> WeatherApp\r\n                        </h1>\r\n                    </Link>\r\n                ]}\r\n                rightItems={[\r\n                    <Tooltip content={`${isDarkMode ? \"Light\" : \"Dark\"} Mode`}>\r\n                        <Button minimal style={{color: \"white\"}} onClick={() => dispatch(toggleDarkMode())}\r\n                            icon={<Icon icon={isDarkMode ? \"flash\" : \"moon\"} \r\n                            style={{color: \"white\"}} intent=\"primary\" />}\r\n                        />\r\n                    </Tooltip>,\r\n                    <Tooltip content=\"Use Your Own API Key\">\r\n                        <Button minimal style={{color: \"white\"}}\r\n                            onClick={() => setIsApiKeyAlertOpened(true)}\r\n                            icon={<Icon icon=\"code\" style={{color: \"white\"}} intent=\"primary\" />}\r\n                        />\r\n                    </Tooltip>,\r\n                    <Tooltip content=\"Toggle Temp Unit\">\r\n                        <Button minimal style={{color: \"white\"}} text={isTempCels ? \"Cels.\" : \"Fahr.\"}\r\n                            onClick={() => dispatch(toggleTempUnit())}\r\n                            icon={<Icon icon=\"snowflake\" style={{color: \"white\"}} intent=\"primary\" />}\r\n                        />\r\n                    </Tooltip>,\r\n                    <LinkButton useNavLink href=\"/\" icon=\"home\">Home</LinkButton>,\r\n                    <LinkButton useNavLink href=\"/favorites\" icon=\"star\">Favorites</LinkButton>,\r\n                ]}\r\n            />\r\n            {alertApiKey}\r\n        </div>\r\n    )\r\n}\r\n","\r\n//adding toasts\r\nexport const ADD_TOAST = \"ADD_TOAST\"\r\n//removing the first toast in array\r\nexport const REMOVE_FIRST_TOAST = \"REMOVE_FIRST_TOAST\"\r\n\r\n//removing the first toast in the array - it was just fired\r\nexport const removeFirstToast = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: REMOVE_FIRST_TOAST })\r\n    }\r\n}\r\n\r\n//add toast to reducer\r\nexport const addToast = (toast = \"Unknown error occurred\") => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: ADD_TOAST, toast\r\n        })\r\n    }\r\n}","import { getCookie, setCookie } from \"../../utils/cookies\"\r\nimport { IS_DARK_MODE_CID, IS_TEMP_CELS_CID } from \"../../utils/consts\"\r\n\r\nexport const SET_SETTINGS = \"SET_SETTINGS\"\r\nexport const TOGGLE_TEMP_UNIT = \"TOGGLE_TEMP_UNIT\"\r\nexport const TOGGLE_DARK_MODE = \"TOGGLE_DARK_MODE\"\r\n\r\n//toggling the temp unit (if it's celsius or not)\r\nexport const toggleTempUnit = () => {\r\n    return (dispatch, getState) => {\r\n        const { isTempCels = false } = getState().settingsReducer\r\n        //updating the cookie\r\n        setCookie(IS_TEMP_CELS_CID, !!!isTempCels)\r\n        //toggling the reducer\r\n        dispatch({ type: TOGGLE_TEMP_UNIT })\r\n    }\r\n}\r\n//toggling dark mode\r\nexport const toggleDarkMode = () => {\r\n    return (dispatch, getState) => {\r\n        const { isDarkMode = false } = getState().settingsReducer\r\n        //updating the cookie\r\n        setCookie(IS_DARK_MODE_CID, !!!isDarkMode)\r\n        //toggling the dark mode for the UI\r\n        document.body.classList.toggle('bp3-dark', !!!isDarkMode)\r\n        //toggling the reducer\r\n        dispatch({ type: TOGGLE_DARK_MODE })\r\n    }\r\n}\r\n\r\n//loading the saved settings from cookies into the state\r\nexport const loadSettingsFromCookie = () => {\r\n    return (dispatch) => {\r\n        //getting data from cookies\r\n        const isDarkMode = getCookie(IS_DARK_MODE_CID) == \"true\"\r\n        const isTempCels = getCookie(IS_TEMP_CELS_CID) == \"true\"\r\n\r\n        //toggling the dark mode in the UI\r\n        document.body.classList.toggle('bp3-dark', isDarkMode)\r\n        \r\n        dispatch({ type: SET_SETTINGS, data: {\r\n            isDarkMode, isTempCels \r\n        } })\r\n    }\r\n}","import React from 'react'\r\n\r\nimport Flexbox from './Flexbox'\r\nimport LinkButton from './LinkButton'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div id=\"footer\">\r\n            <Flexbox \r\n                style={{height: \"100%\"}}\r\n                leftItems={[\r\n                    <p style={{color:\"white\", margin: 0}}>\r\n                        All Rights Reserved Goes Here © {new Date().getFullYear()}\r\n                    </p>\r\n                ]}\r\n                rightItems={[\r\n                    <LinkButton style={{color: \"white\"}} href=\"/\">Home</LinkButton>,\r\n                    <LinkButton style={{color: \"white\"}} href=\"/favorites\">Favorites</LinkButton>,\r\n                    <LinkButton style={{color: \"white\"}} href=\"https://reactjs.org\">ReactJS</LinkButton>,\r\n                    <LinkButton style={{color: \"white\"}} href=\"https://react-redux.js.org/\">React Redux</LinkButton>,\r\n                    <LinkButton style={{color: \"white\"}} href=\"https://developer.accuweather.com/\">AccurWeather API</LinkButton>,\r\n                ]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { Toaster } from '@blueprintjs/core'\r\n\r\nimport { removeFirstToast } from '../store/actions/toasterActions'\r\n\r\nexport default function ToasterFunc() {\r\n    const toasts = useSelector(state => state.toasterReducer.toasts)\r\n    const dispatch = useDispatch()\r\n    const [ref, setRef] = useState(false)\r\n\r\n    useEffect(() => {\r\n        /*\r\n            - if there are toasts in the array\r\n                - fire the first one\r\n                - remove it from the array\r\n                - default toast is \"DANGER\" style and \"Unknown error occured\" message\r\n        */\r\n        toasts.forEach(toast => {\r\n            const { intent = \"DANGER\" } = toast;\r\n            //firing the toast\r\n            ref.show({\r\n                intent,\r\n                icon: intent.toUpperCase() == \"SUCCESS\" ? \"tick\" : \"warning-sign\",\r\n                message: typeof toast == \"string\" ? toast : \"Unknown error occurred\", \r\n                ...(typeof toast == \"object\" ? toast : {})\r\n            })\r\n            dispatch(removeFirstToast())\r\n        }, [toasts])\r\n\r\n    })\r\n\r\n    return (\r\n        <Toaster maxToasts={5}\r\n            ref={(ref) => {setRef(ref)}} \r\n        />\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function Temp({ temp }) {\r\n    const isTempCels = useSelector(state => state.settingsReducer.isTempCels)\r\n    const finalTemp = Number(isTempCels ? ((temp - 32) / 1.8) : temp).toFixed(0);\r\n    const tempUnit = !isNaN(finalTemp) && (isTempCels ? \"C\" : \"F\")\r\n    return (<>{isNaN(finalTemp) ? temp : finalTemp}°{tempUnit}</>)\r\n}\r\n","import React from 'react'\r\n\r\nimport { Callout, Card } from '@blueprintjs/core'\r\n\r\nexport default function MyCallout(props) {\r\n    const { wrapperStyle = {}, style = {}, calloutStyle = {}, title = \"An Error Occurred\",\r\n        intent = \"danger\", children, icon = false } = props;\r\n\r\n    return (\r\n        <div style={{width: \"100%\", ...wrapperStyle}}>\r\n            <Card style={{ margin: \"auto\", maxWidth: \"500px\", padding: 0, ...style }}>\r\n                <Callout style={calloutStyle} intent={intent} title={title} icon={icon}>\r\n                    {children}\r\n                </Callout>\r\n            </Card>\r\n        </div>\r\n    )\r\n}","import React, { useRef, useState } from 'react'\r\n\r\nimport { InputGroup, Menu } from '@blueprintjs/core'\r\n\r\nexport default function AutoComplete(props) {\r\n    const inputRef = useRef(null)\r\n    const { items, itemRenderer, noResults, inputProps = {} } = props;\r\n    const [isOpened, setIsOpened] = useState(false)\r\n    return (\r\n        <div>\r\n            <InputGroup large {...inputProps} inputRef={inputRef} \r\n                onFocus={() => setIsOpened(true)}\r\n                onBlur={() => setTimeout(() => {setIsOpened(false)}, 100)}\r\n            />\r\n            {\r\n                isOpened && \r\n                <Menu style={{position: \"absolute\", zIndex: 1, marginTop: \"1px\"}}\r\n                    onClick={() => setIsOpened(false)}\r\n                >\r\n                    {!items || items.length <= 0 && noResults}\r\n                    {items.map(itemRenderer)}\r\n                </Menu>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { DEFAULT_LOCATION, generateFiveDaysForcastUrl, \r\n    generateAutoCompleteUrl, generateCurConditionByGeoUrl, API_BASE_URL\r\n} from '../../utils/consts'\r\nimport { ADD_TOAST } from './toasterActions'\r\nimport { isStrOnlyLetter } from '../../utils/utils';\r\nimport axios from 'axios'\r\n\r\n//update search query \r\nexport const UPDATE_SEARCH_QUERY = \"UPDATE_SEARCH_QUERY\";\r\n//update selected location \r\nexport const UPDATE_SELECTED_LOCATION = \"UPDATE_SELECTED_LOCATION\";\r\n\r\n//toggle the loading state of a location\r\nexport const TOGGLE_LOADING_LOCATION = \"TOGGLE_LOADING_LOCATION\"\r\n//setting a location's data\r\nexport const SET_LOCATION_DATA = \"SET_LOCATION_DATA\"\r\n//setting a location's error to load data\r\nexport const SET_LOCATION_ERROR = \"SET_LOCATION_ERROR\"\r\n\r\n//loading input auto complete items\r\nexport const LOADING_AUTO_COMPLETE_ITEMS = \"LOADING_AUTO_COMPLETE_ITEMS\"\r\n//setting input auto complete items\r\nexport const SET_AUTO_COMPLETE_ITEMS = \"SET_AUTO_COMPLETE_ITEMS\"\r\n\r\n//selecting new location to show on the homepage\r\nexport const updateSelectedLocation = (item) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: UPDATE_SELECTED_LOCATION, data: {\r\n            key: item.key || DEFAULT_LOCATION.KEY,\r\n            city: item.city || DEFAULT_LOCATION.CITY,\r\n            country: item.country || DEFAULT_LOCATION.COUNTRY,\r\n        } })\r\n    }\r\n}\r\n\r\n//updating the search query\r\nexport const updateSearchQuery = (value) => {\r\n    return (dispatch) => {\r\n        if(isStrOnlyLetter(value) || value == \"\") {\r\n            dispatch({ type: UPDATE_SEARCH_QUERY, value })\r\n        }\r\n    }\r\n}\r\n\r\n//getting location data by its location key\r\nexport const getLocationData = (item = DEFAULT_LOCATION) => {\r\n    return (dispatch, getState) => {\r\n        const { locationsData = {} } = getState().searchReducer;\r\n        const curLocData = locationsData[item.key] || {}\r\n        \r\n        //already loading or already loaded\r\n        if(curLocData.isLoading || \r\n            (!!curLocData.overview && !!curLocData.fiveDaysForcast)) return            \r\n        \r\n        dispatch({ type: TOGGLE_LOADING_LOCATION, locationKey: item.key })\r\n\r\n\r\n\r\n        const api = axios.create({\r\n            baseURL: API_BASE_URL\r\n        })\r\n\r\n        api.get(`locations/v1/cities/autocomplete?apikey=YGqnk3lBPGGPr4JN5DRxyG9zkCGGLAOz&q=te`)\r\n        .then(res => console.log(res)).catch(err => console.log(err))\r\n\r\n\r\n        //fetching location data\r\n        fetch(generateFiveDaysForcastUrl(item.key), {\r\n            headers,\r\n        }).then(r => r.json())\r\n        .then(res => {\r\n            const minTemp = res.DailyForecasts[0].Temperature.Minimum.Value\r\n            const maxTemp = res.DailyForecasts[0].Temperature.Maximum.Value\r\n            const avgTemp = (minTemp + maxTemp) / 2\r\n            let overview = {\r\n                ...item,\r\n                overviewText: res.Headline.Text,\r\n                link: res.Headline.Link,\r\n                temp: isNaN(avgTemp) ? minTemp || maxTemp : avgTemp,\r\n                iconId: res.DailyForecasts[0].Day.Icon,\r\n            }\r\n            let fiveDaysForcast = res.DailyForecasts.map(item => {\r\n                const minTemp = item.Temperature.Minimum.Value\r\n                const maxTemp = item.Temperature.Maximum.Value\r\n                const avgTemp = (minTemp + maxTemp) / 2\r\n                return {\r\n                    date: item.EpochDate,\r\n                    temp: isNaN(avgTemp) ? minTemp || maxTemp : avgTemp,\r\n                    link: item.Link\r\n                }\r\n            })            \r\n            dispatch({ type: SET_LOCATION_DATA, location: item, \r\n                overview, fiveDaysForcast })\r\n        })\r\n        .catch(({ message = \"Unknown error occurred\" }) => {\r\n            dispatch({ type: SET_LOCATION_ERROR, key: item.key, message })\r\n        })\r\n    }\r\n}\r\n\r\n//loading auto complete items\r\nexport const loadAutoComplete = () => {\r\n    return (dispatch, getState) => {\r\n        const { searchQuery } = getState().searchReducer\r\n        if(!searchQuery) return\r\n        //toggle loading\r\n        dispatch({ type: LOADING_AUTO_COMPLETE_ITEMS })\r\n\r\n        //load auto complete\r\n        fetch(generateAutoCompleteUrl(searchQuery),{\r\n            headers,\r\n        }).then(r => r.json())\r\n        .then(res => {\r\n            const data = res.map(item => ({\r\n                key: item.Key,\r\n                city: item.LocalizedName,\r\n                country: item.Country.LocalizedName,\r\n            })).filter(item => (item.city.toLowerCase().includes(searchQuery.toLowerCase()) || \r\n                item.country.toLowerCase().includes(searchQuery.toLowerCase())))\r\n            dispatch({ type: SET_AUTO_COMPLETE_ITEMS, data })\r\n        }).catch(err => {\r\n            dispatch({ type: SET_AUTO_COMPLETE_ITEMS, data: [] })\r\n        })\r\n    }\r\n}\r\n\r\n//getting user geo-loc from the browser - on error selecting the default location\r\nexport const getUserGeolocation = () => {\r\n    return (dispatch) => {\r\n        const error = (message) => {\r\n            dispatch({ type: ADD_TOAST, toast: message })\r\n            dispatch(updateSelectedLocation(DEFAULT_LOCATION))\r\n        }\r\n        if(!navigator.geolocation) {\r\n            error(\"Geolocation is not supported by your browser\")\r\n        } else {\r\n            dispatch({ type: ADD_TOAST, toast: { intent: \"PRIMARY\", icon: \"locate\", \r\n                message: \"Locating...\", timeout: 1500 } })\r\n            navigator.geolocation.getCurrentPosition((position) => { //success\r\n                const latitude  = position.coords.latitude;\r\n                const longitude = position.coords.longitude;\r\n                dispatch(getGeolocationData(latitude, longitude))\r\n            }, () => error(\"Unable to retrieve your location\"))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//loading geo-loc data for given lat and long\r\nexport const getGeolocationData = (latitude, longitude) => {\r\n    return (dispatch) => {\r\n        fetch(generateCurConditionByGeoUrl(latitude, longitude),{\r\n            headers\r\n        }).then(r => r.json())\r\n        .then(res => {\r\n            dispatch(updateSelectedLocation({\r\n                key: res.Key, \r\n                city: res.LocalizedName, \r\n                country: res.Country.LocalizedName\r\n            }))\r\n        }).catch(({ message = \"Unknown error occurred\" }) => {\r\n            dispatch({ type: ADD_TOAST, toast: `${message}, loading default location...` })\r\n            dispatch(updateSelectedLocation(DEFAULT_LOCATION))\r\n        })\r\n    }\r\n}\r\n\r\nconst headers = { \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"*/*\", \"Accept-Encoding\": \"gzip\", \"Accept-Language\":\"en-US\"\r\n        }\r\n\r\n","import { FAVORITES_CID, generateCurConditionByLocKeyUrl } from '../../utils/consts'\r\nimport { getCookie, setCookie } from '../../utils/cookies'\r\n\r\n//setting favorites\r\nexport const SET_FAVORITES = \"SET_FAVORITES\"\r\n//toggling the loading state of a favorite\r\nexport const TOGGLE_LOADING_FAV_WEATHER = \"TOGGLE_LOADING_FAV_WEATHER\"\r\n//setting in state a favorite's data\r\nexport const SET_FAV_WEATHER_DATA = \"SET_FAV_WEATHER_DATA\"\r\n\r\n//toggling favorite location\r\nexport const toggleFavoriteLocation = (item) => {\r\n    return (dispatch, getState) => {\r\n        let { favorites } = getState().favoriteReducer\r\n        const isFavorite = !!favorites.find(el => el.key == item.key);\r\n        if(isFavorite) {\r\n            favorites = favorites.filter(el => el.key != item.key)\r\n        } else {\r\n            favorites.push(item)\r\n        }\r\n        setCookie(FAVORITES_CID, JSON.stringify(favorites))\r\n        dispatch({ type: SET_FAVORITES, favorites })\r\n    }\r\n}\r\n\r\n//loading the favorite list from the cookie into the state\r\nexport const loadFavoritesFromCookie = () => {\r\n    return (dispatch) => {\r\n        let favorites;\r\n        try{\r\n            favorites = JSON.parse(getCookie(FAVORITES_CID)) || []\r\n        } catch(err) {\r\n            favorites = []\r\n        }\r\n        dispatch({ type: SET_FAVORITES, favorites })\r\n    }\r\n}\r\n\r\n//loading the favorites weather info\r\nexport const loadFavoriteWeatherInfo = () => {\r\n    return (dispatch, getState) => {\r\n        const { favorites = [], favoriteWeatherData = [] } = getState().favoriteReducer\r\n        favorites.forEach(item => {\r\n            const curItemData = favoriteWeatherData[item.key]\r\n            if(!curItemData) {\r\n                //set loading\r\n                dispatch({ type: TOGGLE_LOADING_FAV_WEATHER, key: item.kew })\r\n\r\n                fetch(generateCurConditionByLocKeyUrl(item.key),{\r\n                    credentials: \"include\"\r\n                }).then(r => r.json())\r\n                .then(res => {\r\n                    //send data to reducer\r\n                    dispatch({ type: SET_FAV_WEATHER_DATA, key: item.key, data: {\r\n                        temp: res[0].Temperature.Imperial.Value,\r\n                        text: res[0].WeatherText\r\n                    } })\r\n                }).catch(err => {\r\n                    dispatch({ type: SET_FAV_WEATHER_DATA, key: item.key, data: {\r\n                        temp: \"\",\r\n                        text: \"Error occurred\"\r\n                    } })\r\n                })\r\n            }\r\n        });\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n//libraries\r\nimport { connect } from 'react-redux'\r\nimport { MenuItem, Card, H2, Spinner, Button, } from '@blueprintjs/core'\r\n\r\n//utils\r\nimport { getDayNameByIndex, } from '../utils/utils'\r\n\r\n//components\r\nimport Flexbox from '../components/Flexbox'\r\nimport Temp from '../components/Temp'\r\nimport Link from '../components/Link'\r\nimport Callout from '../components/Callout'\r\nimport AutoComplete from '../components/AutoComplete'\r\n\r\n//actions\r\nimport { updateSelectedLocation, updateSearchQuery, getLocationData, loadAutoComplete, getUserGeolocation\r\n} from '../store/actions/searchActions'\r\nimport { toggleFavoriteLocation } from '../store/actions/favoriteActions'\r\n\r\nconst Home = (props) => {\r\n    //data from the relevant reducers\r\n    const { autoComplete = [], selectedLocation, searchQuery, locationsData, \r\n        isLoadingAutoComplete = false } = props.searchReducer\r\n    const { favorites } = props.favoriteReducer\r\n\r\n    //getting the selected location's data\r\n    const data = locationsData[selectedLocation.key] || {}\r\n    const { isLoading = true, overview = {}, fiveDaysForcast = [], errorMessage = false } = data;\r\n    const { overviewText = \"\", city = \"\", country = \"\", key = \"\", temp = \"\", link = \"\", iconId = \"\" } = overview;\r\n    const isFavorite = !!favorites.find(item => item.key == key)\r\n    const isGeoLocationSelected = !Object.keys(selectedLocation).length;\r\n\r\n    useEffect(() => {\r\n        //if selected geo asking the user for permission and getting data\r\n        if(isGeoLocationSelected) props.getUserGeolocation()\r\n        //else loading selected location's data\r\n        else props.getLocationData(selectedLocation)\r\n    }, [selectedLocation])\r\n\r\n    //managing auto complete cooldown, so it wouldn't spam the server with redundant requests\r\n    const [autoComplSearchTimeout, setAutoComplSearchTimeout] = useState(null)\r\n    useEffect(() => {\r\n        clearTimeout(autoComplSearchTimeout);\r\n        setAutoComplSearchTimeout(setTimeout(() => props.loadAutoComplete(), 350));\r\n    }, [searchQuery])\r\n\r\n    const searchBox = <div style={{display: \"flex\", flexFlow: \"column\", alignItems: \"center\", justifyContent: \"center\"}}>\r\n        <H2 style={{color: \"white\"}}>Search For a Location</H2>\r\n        <AutoComplete\r\n            inputProps={{\r\n                value: searchQuery,\r\n                onChange: (e) => props.updateSearchQuery(e.target.value),\r\n                placeholder: \"Type a city to get its weather\",\r\n                style: {width: \"calc(100vw - 25px)\", maxWidth: \"550px\", margin: \"auto\"},\r\n            }}\r\n            items={autoComplete}\r\n            itemRenderer={item => <MenuItem style={{width: \"100vw\", maxWidth: \"540px\"}}\r\n                key={item.key} text={`${item.city}, ${item.country}`}\r\n                onClick={() => props.updateSelectedLocation(item)}\r\n            />}\r\n            noResults={<MenuItem style={{width: \"100vw\", maxWidth: \"540px\"}} disabled\r\n                text={\r\n                    isLoadingAutoComplete ?\r\n                    <>\r\n                        <div className=\"bp3-skeleton\">This is placeholder for shiver</div> \r\n                        <div className=\"bp3-skeleton\" style={{marginTop: \"7.5px\"}}>This is placeholder for shiver</div>\r\n                    </>\r\n                    :\r\n                    (searchQuery.length > 0 ? \"No Results\" : \"Start typing a location to see results\")\r\n                } />\r\n            }\r\n        />\r\n    </div>\r\n    \r\n    const errorCallout = !isLoading && errorMessage && \r\n        <Callout style={{marginTop: \"2.5vh\"}} title={\"An Error Occurred\"} \r\n            intent={\"DANGER\"} icon=\"error\" >\r\n                {errorMessage}\r\n        </Callout>\r\n\r\n    const searchResult = isLoading ? \r\n        <div style={{margin: \"2.5vh 2.5vw\"}}><Spinner className=\"white-spinner\" /></div> \r\n        : <Card elevation=\"4\" style={{marginTop: \"2.5vh\", minHeight: \"55vh\", \r\n            display: \"flex\", flexFlow: \"column\", justifyContent: \"space-between\"}}>\r\n        <Flexbox style={{alignItems: \"start\"}} leftItems={[\r\n            <Link href={link} style={{textDecoration: \"none\", margin: \"unset\"}} showIcon={false}>\r\n                <Card elevation=\"2\" interactive >\r\n                    #{key}<br/>\r\n                    {city}, {country}<br/>\r\n                    <Temp temp={temp} />\r\n                </Card>\r\n            </Link>\r\n        ]} \r\n        leftStyle={{flex: 1}}\r\n        rightStyle={{flex: 1, justifyContent: \"end\"}}\r\n        rightItems={[\r\n            <Button onClick={() => props.toggleFavoriteLocation({key, city, country})} \r\n                icon={isFavorite ? \"star\" : \"star-empty\"}>\r\n                {isFavorite ? \"Location Marked As Favorite\" : \"Favorite This Location\"}\r\n            </Button>\r\n        ]}\r\n        />\r\n        <div style={{textAlign: \"center\", margin: \"0 auto 7.5vh\"}} >\r\n            {iconId && <img src={`https://www.accuweather.com/images/weathericons/${iconId}.svg`} \r\n                alt={overviewText} style={{maxWidth: \"100px\", maxHeight: \"100px\"}} />}\r\n            <H2>{overviewText}</H2>\r\n        </div>\r\n        <Flexbox centerStyle={{width: \"100%\", justifyContent: \"space-around\"}} centerItems={\r\n            fiveDaysForcast.map(item => (\r\n                <Link href={item.link} style={{textDecoration: \"none\"}} showIcon={false}>\r\n                    <Card interactive elevation=\"2\" style={{textAlign: \"center\", margin: \"5px\"}}>\r\n                        <div><b>{getDayNameByIndex(new Date(item.date * 1000).getDay())}</b></div>\r\n                        <div><Temp temp={item.temp} /></div>\r\n                    </Card>\r\n                </Link>\r\n            ))\r\n        } />\r\n    </Card>\r\n\r\n    return (\r\n        <div>\r\n            {searchBox}\r\n            {errorMessage ? errorCallout : searchResult}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/*\r\n    getting the data from the reducers and dispatching actions this way instead of \r\n    with hooks in order to easily track the data and actions that's being used\r\n    in this component\r\n*/\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchReducer: state.searchReducer,\r\n        favoriteReducer: state.favoriteReducer,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateSelectedLocation: (item) => dispatch(updateSelectedLocation(item)),\r\n        updateSearchQuery: (value) => dispatch(updateSearchQuery(value)),\r\n        getLocationData: (item) => dispatch(getLocationData(item)),\r\n        toggleFavoriteLocation: (item) => dispatch(toggleFavoriteLocation(item)),\r\n        loadAutoComplete: () => dispatch(loadAutoComplete()),\r\n        getUserGeolocation: () => dispatch(getUserGeolocation()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","\r\nexport const getDayNameByIndex = (index) => {\r\n    return ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][index]\r\n}\r\n\r\nexport const isStrOnlyLetter = (str) => {\r\n    return /^[a-zA-Z ]+$/.test(str)\r\n}","import React from 'react'\r\nimport { Card, H3, H4 } from '@blueprintjs/core'\r\n\r\nimport Temp from './Temp'\r\n\r\nexport default function WeatherCard({ isLoading, title, text, degree, onClick }) {\r\n    return (\r\n        <Card onClick={() => onClick && onClick()} \r\n            elevation=\"5\" interactive={!isLoading} style={{margin: \"10px\"}}>\r\n            <H3 className={isLoading && \"bp3-skeleton\"} style={{textAlign: \"center\"}}>{isLoading ? \"placeholder\" : title}</H3>\r\n            <H4 className={isLoading && \"bp3-skeleton\"} style={{textAlign: \"center\"}}>{isLoading ? \"placeholder\" : text}</H4>\r\n            <H4 className={isLoading && \"bp3-skeleton\"} style={{textAlign: \"center\"}}>\r\n                {isLoading ? \"placeholder\" : (degree ? <Temp temp={degree} /> : degree)}\r\n            </H4>\r\n        </Card>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Flexbox from '../components/Flexbox'\r\nimport WeatherCard from '../components/WeatherCard'\r\nimport Callout from '../components/Callout'\r\n\r\nimport { H1 } from '@blueprintjs/core'\r\n\r\nimport { updateSelectedLocation } from '../store/actions/searchActions'\r\nimport { loadFavoriteWeatherInfo } from '../store/actions/favoriteActions'\r\n\r\nexport default function Favorites() {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const favorites = useSelector(state => state.favoriteReducer.favorites) || []\r\n    const favoriteWeatherData = useSelector(state => state.favoriteReducer.favoriteWeatherData) || {}\r\n\r\n    useEffect(() => {\r\n        dispatch(loadFavoriteWeatherInfo())\r\n    }, [favorites])\r\n\r\n    return (\r\n        <div>\r\n            <H1 style={{color: \"white\", margin: \"2.5vh auto\", textAlign: \"center\"}}>Favorites</H1>\r\n            <Flexbox \r\n                centerStyle={{\r\n                    justifyContent: \"center\",\r\n                    width: \"100%\",\r\n                    alignItems: \"stretch\"\r\n                }}\r\n                centerItems={[\r\n                    ...(favorites && favorites.length > 0 ?\r\n                    favorites.map((item, i) => {\r\n                        const { isLoading = true, text = \"\", temp = \"\", } = favoriteWeatherData[item.key] || {};\r\n                        return <WeatherCard onClick={() => {\r\n                            dispatch(updateSelectedLocation(item))\r\n                            history.push(\"/\")\r\n                        }} isLoading={isLoading} title={item.city} text={text} degree={temp} />\r\n                    })\r\n                    : [\r\n                        <Callout title=\"No Favorite Locations\" intent=\"primary\" icon=\"star\">\r\n                            <p>\r\n                                You don't have any favorite locations, go the homepage and add\r\n                                some favorite locations, then come back here to see a summary of all your\r\n                                favorite locations.\r\n                            </p>\r\n                        </Callout>\r\n                    ])]\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { H2, H4 } from '@blueprintjs/core'\r\n\r\nexport default function PageNotFound() {\r\n    return (\r\n        <div style={{textAlign: \"center\", marginTop: \"5vh\"}}>\r\n            <H2 style={{color: \"white\"}}>404 Page Not Found</H2>\r\n            <H4 style={{color: \"white\", marginTop: \"1.5vh\"}}>\r\n                Make sure you entered the correct URL in the browser's search bar.\r\n            </H4>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\n\n//components\nimport Navbar from './components/Navbar'\nimport Footer from './components/Footer'\nimport Toaster from './components/Toaster'\n\n//pages\nimport Home from './pages/Home'\nimport Favorites from './pages/Favorites'\nimport PageNotFound from './pages/PageNotFound'\n\n//blueprint.js css\nimport \"../node_modules/normalize.css/normalize.css\"\nimport \"../node_modules/@blueprintjs/icons/lib/css/blueprint-icons.css\"\nimport \"../node_modules/@blueprintjs/core/lib/css/blueprint.css\"\n\n//actions\nimport { loadFavoritesFromCookie } from './store/actions/favoriteActions'\nimport { loadSettingsFromCookie } from './store/actions/settingsActions'\n\nexport default function App() {\n\tconst disptach = useDispatch()\n\n\tuseEffect(() => {\n\t\t//loading the favorites from the cookies into the favorite reducer\n\t\tdisptach(loadFavoritesFromCookie())\n\t\t//load the settings from cookies into the settings reducer\n\t\tdisptach(loadSettingsFromCookie())\n\t}, [])\n\n\treturn (\n\t\t<>\n\t\t\t<BrowserRouter basename=\"/shawn-weather-05-07-2020\">\n\t\t\t\t<Navbar />\n\t\t\t\t<div id=\"content\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path={\"/\"} component={Home} />\n\t\t\t\t\t\t<Route exact path={\"/favorites\"} component={Favorites} />\n\t\t\t\t\t\t<Route path={\"*\"} component={PageNotFound} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t\t<Footer />\n\t\t\t</BrowserRouter>\n\t\t\t<Toaster />\n\t\t</>\n\t);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { UPDATE_SELECTED_LOCATION, UPDATE_SEARCH_QUERY, TOGGLE_LOADING_LOCATION, \r\n    SET_LOCATION_DATA, SET_AUTO_COMPLETE_ITEMS, SET_LOCATION_ERROR, \r\n    LOADING_AUTO_COMPLETE_ITEMS,\r\n} from '../actions/searchActions'\r\n\r\nconst initialState = {\r\n    searchQuery: \"\",\r\n    selectedLocation: {\r\n    /*\r\n        key: \"\",\r\n        city: \"\",\r\n        country: \"\",\r\n    */\r\n    },\r\n    locationsData: {\r\n        /*\"<LOCATION-KEY>\": {\r\n            isLoading: false,\r\n            errorMessage: \"\",\r\n            overview: {\r\n                key: \"\",\r\n                city: \"\",\r\n                country: \"\",\r\n                overviewText: \"\",\r\n                link: \"\",\r\n                temp: \"\"\r\n                iconId: \"\"\r\n            },\r\n            fiveDaysForcast: [\r\n                {\r\n                    date: \"\",\r\n                    temp: \"\",\r\n                    link: \"\"\r\n                }\r\n            ],\r\n        }*/\r\n    },\r\n    isLoadingAutoComplete: false,\r\n    autoComplete: [],\r\n}\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case TOGGLE_LOADING_LOCATION:\r\n            return {\r\n                ...state,\r\n                locationsData: {\r\n                    ...state.locationsData,\r\n                    [action.locationKey]: {\r\n                        ...state.locationsData[action.locationKey],\r\n                        isLoading: !!!state.locationsData[action.locationKey],\r\n                    }\r\n                },\r\n            }\r\n        case SET_LOCATION_DATA:\r\n            return {\r\n                ...state,\r\n                locationsData: {\r\n                    ...state.locationsData,\r\n                    [action.location.key]: {\r\n                        ...state.locationsData[action.location.key],\r\n                        errorMessage: \"\",\r\n                        isLoading: false,\r\n                        overview: action.overview,\r\n                        fiveDaysForcast: action.fiveDaysForcast,\r\n                    }\r\n                },\r\n            }\r\n        case SET_LOCATION_ERROR:\r\n            return {\r\n                ...state,\r\n                locationsData: {\r\n                    ...state.locationsData,\r\n                    [action.key]: {\r\n                        ...state.locationsData[action.key],\r\n                        isLoading: false,\r\n                        errorMessage: action.message,\r\n                    }\r\n                },\r\n            }\r\n        case UPDATE_SELECTED_LOCATION:\r\n            return {\r\n                ...state,\r\n                selectedLocation: action.data,\r\n            }\r\n        case UPDATE_SEARCH_QUERY:\r\n            return {\r\n                ...state,\r\n                searchQuery: action.value,\r\n            }\r\n        case SET_AUTO_COMPLETE_ITEMS:\r\n            return {\r\n                ...state,\r\n                autoComplete: action.data,\r\n                isLoadingAutoComplete: false,\r\n            }\r\n        case LOADING_AUTO_COMPLETE_ITEMS:\r\n            return {\r\n                ...state,\r\n                isLoadingAutoComplete: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Reducer","import { SET_FAVORITES, TOGGLE_LOADING_FAV_WEATHER, SET_FAV_WEATHER_DATA } from '../actions/favoriteActions'\r\n\r\nconst initialState = {\r\n    favorites: [\r\n        /*{\r\n            \"key\": \"\",\r\n            \"city\": \"\",\r\n            \"country\": \"\"\r\n        },*/\r\n    ],\r\n    favoriteWeatherData: {\r\n        /*\"<LOCATION-KEY>\": {\r\n            text: \"\",\r\n            temp: \"\",\r\n        }*/\r\n    }\r\n}\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_FAVORITES:\r\n            return {\r\n                ...state,\r\n                favorites: action.favorites,\r\n            }\r\n        case TOGGLE_LOADING_FAV_WEATHER:\r\n            return {\r\n                ...state,\r\n                favoriteWeatherData: {\r\n                    ...state.favoriteWeatherData,\r\n                    [action.key]: {\r\n                        ...state.favoriteWeatherData[action.key],\r\n                        isLoading: true,\r\n                    }\r\n                },\r\n            }\r\n        case SET_FAV_WEATHER_DATA:\r\n            return {\r\n                ...state,\r\n                favoriteWeatherData: {\r\n                    ...state.favoriteWeatherData,\r\n                    [action.key]: {\r\n                        ...state.favoriteWeatherData[action.key],\r\n                        isLoading: false,\r\n                        ...action.data,\r\n                    }\r\n                },\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Reducer","import { ADD_TOAST, REMOVE_FIRST_TOAST } from '../actions/toasterActions'\r\n\r\nconst initialState = {\r\n    toasts: []\r\n}\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_TOAST:\r\n            return {\r\n                toasts: [...state.toasts, action.toast]\r\n            }\r\n        case REMOVE_FIRST_TOAST:\r\n            return {\r\n                toasts: [...(state.toasts.slice(1))]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Reducer","import { SET_SETTINGS, TOGGLE_TEMP_UNIT, TOGGLE_DARK_MODE } from '../actions/settingsActions'\r\n\r\nconst initialState = {\r\n    isTempCels: true,\r\n    isDarkMode: false,\r\n}\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_SETTINGS:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        case TOGGLE_TEMP_UNIT:\r\n            return {\r\n                ...state,\r\n                isTempCels: !state.isTempCels,\r\n            }\r\n        case TOGGLE_DARK_MODE:\r\n            return {\r\n                ...state,\r\n                isDarkMode: !state.isDarkMode,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Reducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nimport searchReducer from './searchReducer'\r\nimport favoriteReducer from './favoriteReducer'\r\nimport toasterReducer from './toasterReducer'\r\nimport settingsReducer from './settingsReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    searchReducer,\r\n    favoriteReducer,\r\n    toasterReducer,\r\n    settingsReducer,\r\n})\r\n\r\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport Store from './store/reducers/rootReducer'\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}